(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{405:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"模拟三面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模拟三面"}},[t._v("#")]),t._v(" 模拟三面")]),t._v(" "),s("h2",{attrs:{id:"_1-html-语义化的好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-html-语义化的好处"}},[t._v("#")]),t._v(" 1.HTML 语义化的好处？")]),t._v(" "),s("ul",[s("li",[t._v("代码结构：使页面没有 CSS 的情况下，也能够呈现出很好的内容结构。")]),t._v(" "),s("li",[t._v("有利于SEO：爬虫依赖标签来确定关键字的权重，因此可以和搜索引擎建立良好的沟通，帮助爬虫抓取更多的有效信息。")]),t._v(" "),s("li",[t._v("提升用户体验：例如 title、alt 可以用于解释名称或者解释图片信息，以及 label 标签的灵活运用。")]),t._v(" "),s("li",[t._v("便于团队开发和维护：语义化使得代码更具有可读性，让其他开发人员更加理解你的 HTML 结构，减少差异化。")]),t._v(" "),s("li",[t._v("无障碍：方便无障碍引擎对网页内容进行解析，如屏幕阅读器、盲人阅读器、移动设备等。")])]),t._v(" "),s("h2",{attrs:{id:"_2-对比-js-css-做动画有什么好处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-对比-js-css-做动画有什么好处"}},[t._v("#")]),t._v(" 2.对比 JS，CSS 做动画有什么好处？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("transition")]),t._v("：侦听属性发生变化时触发，搭配其他样式属性可以实现大多数过渡动画。")]),t._v(" "),s("li",[s("code",[t._v("animation")]),t._v("：自动触发，搭配"),s("code",[t._v("@keyframes")]),t._v("能够实现大多数较复杂的循环动画。")]),t._v(" "),s("li",[t._v("CSS 可以调用 GPU 的能力进行渲染，动态设置较困难，适合效果固定的动画。")]),t._v(" "),s("li",[t._v("JS 做动画会占用 JavaScript引擎，并使用 CPU 进行计算，动态设置较简单，适合做效果复杂的动画。")])]),t._v(" "),s("p",[s("strong",[t._v("PS")]),t._v("：GPU 加速原理：浏览器的 GPU 加速功能是将需要进行动画的元素提升到一个独立的 layer，这样就可以避免重排（Reflow）和重绘（Repaint）。原先用 CPU 绘制位图来实现的动画效果将转让给 GPU使用图层合成来实现；如果两张图层内部没有发生改变，浏览器就不会进行重排和重绘，而是直接使用 GPU 的缓存来绘制每个图层，这样可以充分利用 GPU 的资源，减轻 CPU 的负担，使动画更流畅，还节省了很多绘图时间。可以使用 transform 和 opacity 属性来实现动画，当设置了其中一个，浏览器会自动进行这一优化操作。")]),t._v(" "),s("h2",{attrs:{id:"_3-http-有哪些字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-有哪些字段"}},[t._v("#")]),t._v(" 3.HTTP 有哪些字段？")]),t._v(" "),s("p",[s("code",[t._v("Cookie")]),t._v("：对应服务器通过"),s("code",[t._v("Set-Cookie")]),t._v("设置的一个HTTP协议。")]),t._v(" "),s("p",[s("code",[t._v("Cache-Control")]),t._v("：用来指定当前的请求/回复中的，是否使用缓存机制。")]),t._v(" "),s("p",[s("code",[t._v("If-Modified-Since")]),t._v("：允许在对应的资源未被修改的情况下返回304未修改。")]),t._v(" "),s("p",[s("code",[t._v("If-None-Match")]),t._v("：允许在对应的内容未被修改的情况下返回304未修改。")]),t._v(" "),s("p",[s("code",[t._v("Origin")]),t._v("：发起一个针对跨域资源共享的请求，（要求服务器在响应中加入"),s("code",[t._v("Access-Control-Allow-Origin")]),t._v("的消息头）")]),t._v(" "),s("h2",{attrs:{id:"_4-get-和-post-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-get-和-post-有什么区别"}},[t._v("#")]),t._v(" 4.GET 和 POST 有什么区别？")]),t._v(" "),s("ul",[s("li",[t._v("GET 一般是用来获取数据，POST 一般是用来提交数据。")]),t._v(" "),s("li",[t._v("GET 请求只能进行url编码，而 POST 支持多种编码方式。")]),t._v(" "),s("li",[t._v("GET 请求会被浏览器主动 cache，而 POST 不会，除非手动设置。")]),t._v(" "),s("li",[t._v("GET 参数通过 URL 传递，POST 放在 Request body 中。")])]),t._v(" "),s("h2",{attrs:{id:"_5-字符串如何调用到原型链上的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串如何调用到原型链上的方法"}},[t._v("#")]),t._v(" 5.字符串如何调用到原型链上的方法?")]),t._v(" "),s("p",[t._v("首先在原型链上添加方法，然后必须通过实例化对象之后去调用它，不能直接调用。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myfunc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myfunc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_6-css-pointer-events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-css-pointer-events"}},[t._v("#")]),t._v(" 6.CSS：Pointer events")]),t._v(" "),s("p",[t._v("// 目前绝大多数的 Web 内容都假设用户的指针定点设备为鼠标，然而近年来新兴的设备支持更多种不同方式的指针定点输入，如各类触控笔和触摸屏幕等。这就有必要扩展现存的定点设备事件模型，以有效追踪各类指针事件。")]),t._v(" "),s("p",[t._v("指针事件（Pointer events）是一类可以为定点设备所触发的 DOM 事件。它们被用来创建一个可以有效掌握各类输入设备（鼠标、触控笔和单点或多点的手指触摸）的统一的 DOM 事件模型。"),s("code",[t._v("PointerEvent")]),t._v(" 接口继承了所有 "),s("code",[t._v("MouseEvent")]),t._v("中的属性，以保障原有为鼠标事件所开发的内容能更加有效的迁移到指针事件。")]),t._v(" "),s("h2",{attrs:{id:"_7-css-盒模型是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-css-盒模型是什么"}},[t._v("#")]),t._v(" 7.CSS 盒模型是什么?")]),t._v(" "),s("p",[t._v("当对一个文档进行布局的时候，浏览器的渲染引擎会根据标准之一的 CSS 基础盒模型将所有元素表示为一个个矩形的盒子，该盒子由 margin、border、padding、content 组成。")]),t._v(" "),s("p",[t._v("盒模型分为两种，分别是标准盒模型和怪异盒模型。CSS3 提供了一个属性用于声明盒模型的类型，它就是"),s("code",[t._v("box-sizing")]),t._v("，可以设置以下值：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("content-box")]),t._v("：标准盒模型（默认）")]),t._v(" "),s("li",[s("strong",[t._v("border-box")]),t._v("：怪异盒模型")])]),t._v(" "),s("p",[t._v("标准盒模型认为：盒子的实际尺寸 = 内容（设置的宽/高）+ 内边距 + 边框：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没设置 box-sizing 则为默认 content-box 标准盒模型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    padding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    border"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("px solid #eee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    margin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时内容宽度为 200px，实际宽度为 200+10+10+1+1=222")]),t._v("\n")])])]),s("p",[t._v("怪异盒模型认为：盒子的实际尺寸 = 设置的宽/高 = 内容 + 内边距 + 边框：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    padding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    border"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("px solid #eee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    margin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sizing"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" border"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时内容宽度为 200-10-10-1-1=178，实际宽度为 200px")]),t._v("\n")])])]),s("h2",{attrs:{id:"_8-requestanimationframe-是什么-有什么用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-requestanimationframe-是什么-有什么用"}},[t._v("#")]),t._v(" 8.requestAnimationFrame 是什么？有什么用？")]),t._v(" "),s("p",[t._v("requestAnimationFrame() 是 HTML5 提供的一个专门用于请求动画的 API， 可以重复播放动画，对应的函数为 cancelAnimationFrame()，接受一个由requestAnimationFrame() 默认传出的ID，用于停止动画。")]),t._v(" "),s("p",[s("code",[t._v("requestAnimationFrame()")]),t._v("、"),s("code",[t._v("setTimeout()")]),t._v("、"),s("code",[t._v("setInterval()")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("setTimeout() 通过设定间隔时间来不断改变图像位置，达到动画效果，容易出现卡顿和抖动现象，因为 setTimeout() 任务会被放进异步队列，只有主线程任务执行完毕后才会执行队列中的任务，实际执行时间会比设定时间晚。")]),t._v(" "),s("li",[t._v("使用 requestAnimationFrame() 可保证每个刷新间隔内，函数只被执行一次，这样既能保证流畅性，也能更好的节省函数执行的开销。")]),t._v(" "),s("li",[t._v("在隐藏或不可见的元素中，requestAnimationFrame() 将不会进行重绘或重排，这当然就意味着更少的的 CPU，GPU 和内存使用量。")])]),t._v(" "),s("h2",{attrs:{id:"_9-slice-call-的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-slice-call-的原理"}},[t._v("#")]),t._v(" 9.[ ].slice.call() 的原理？")]),t._v(" "),s("p",[t._v("[ ].slice.call() 常用来将伪数组转化成真正的数组。要了解原理我们应该了解以下几点：")]),t._v(" "),s("ul",[s("li",[t._v("这里的 [] 是构造函数 Array 的一个实例，所以继承了 slice() 方法，所以有："),s("code",[t._v("Array.prototype.slice.call() === [].slice.call()")]),t._v("。")]),t._v(" "),s("li",[t._v("call() 方法是实现转化的关键， 它会调用函数并且改变 this 的指向。")]),t._v(" "),s("li",[t._v("slice(begin, end) 方法接受两个参数，返回数组从 begin 开始至 end（不包括end）部分的浅拷贝。")]),t._v(" "),s("li",[t._v("伪数组：有一个明确的标识——"),s("code",[t._v("length")]),t._v("属性，并且是以索引形式进行存储如："),s("code",[t._v("let a = {0: 'a', 1: 'b', 2: 'c', length: 3}")]),t._v("。")])]),t._v(" "),s("p",[t._v("总之，就是通过 call() 改变 this 的指向，让伪数组可以调用 slice() 方法返回一个真正的数组。")])])}),[],!1,null,null,null);a.default=n.exports}}]);