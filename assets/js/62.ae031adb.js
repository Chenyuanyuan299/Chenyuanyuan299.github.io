(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{445:function(v,_,t){"use strict";t.r(_);var s=t(45),r=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"数据链路层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据链路层"}},[v._v("#")]),v._v(" 数据链路层")]),v._v(" "),t("p",[v._v("数据链路层使用的信道主要有以下两种类型：")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("点对点信道")]),v._v("，使用 PPP 协议(Point to Point Protocol)：这种信道使用一对一的点对点通信方式。")]),v._v(" "),t("li",[t("strong",[v._v("广播信道")]),v._v("，使用 CSMA/CD 协议(Carrier Sense Multiple Access with Collision Detection)：这种信道使用一对多的广播通信方式，过程比较复杂。")])]),v._v(" "),t("blockquote",[t("p",[t("strong",[v._v("链路")]),v._v("一般是指一个结点到相邻结点的一段物理线路，而"),t("strong",[v._v("数据链路")]),v._v("除了必须有物理链路外还需要通信协议来控制数据的传输。也就是说，把实现这些协议的硬件和软件加到链路上就构成了数据链路。最常用的方法是使用"),t("strong",[v._v("网络适配器")]),v._v("（包含物理层和数据链路层）来实现。")])]),v._v(" "),t("h2",{attrs:{id:"主要问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要问题"}},[v._v("#")]),v._v(" 主要问题")]),v._v(" "),t("p",[v._v("数据链路层的三个基本问题是：封装成帧、透明传输和差错检测。")]),v._v(" "),t("h3",{attrs:{id:"封装成帧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#封装成帧"}},[v._v("#")]),v._v(" 封装成帧")]),v._v(" "),t("p",[v._v("封装成帧就是在一段数据的前后分别增加首部和尾部，构成一个帧。首部和尾部的作用就是进行帧定界，以及包含一些控制信息。为了提高帧的传输效率，应该使帧的数据部分的长度尽可能长，考虑到差错控制等因素，每一种链路层协议都规定了所能传送的帧的数据部分长度上限——"),t("strong",[v._v("最大传送单元 MTU")]),v._v("。")]),v._v(" "),t("p",[v._v("控制字符 SOH(十六进制01) 放在帧的最前面表示首部开始，ETO(十六进制04) 表示帧的结束，这样接受端就可以通过这两个控制字符判断所接收的帧是否完整。")]),v._v(" "),t("h3",{attrs:{id:"透明传输"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#透明传输"}},[v._v("#")]),v._v(" 透明传输")]),v._v(" "),t("p",[v._v("透明传输是指"),t("strong",[v._v("数据链路层对上层交付的传输数据没有任何限制")]),v._v("，就好像数据链路层不存在一样。")]),v._v(" "),t("p",[v._v("由于帧的开始和结束的标记使用专门指明的控制字符，所以传输的数据中不应该出现连续 8bit 的数据和控制字符一样，否则就会造成帧定界的错误。那么应该怎么解决这种问题呢？")]),v._v(" "),t("ul",[t("li",[v._v("面向字节的物理链路\n使用字节填充的方法实现透明传输：发送端的数据链路层在数据中出现控制字符时，便在前面插入一个"),t("strong",[v._v('转义字符"ESC"')]),v._v("(十六进制1B)，如果碰到数据中有与转义字符相同的比特，便在前面再插入一个转义字符，这样接受方只要删除所有转义字符就能获取原来的正确数据。")]),v._v(" "),t("li",[v._v("面向比特的物理链路\n如果数据传输过程中出现连续5个1，使用0比特填充法，在后面插入一个0。")])]),v._v(" "),t("h3",{attrs:{id:"差错检测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#差错检测"}},[v._v("#")]),v._v(" 差错检测")]),v._v(" "),t("p",[v._v("实际的通信链路都不是理想的，比特在传输过程中可能会产生差错，1变0或0变1，这称为比特差错。在一段时间内，传输错误的比特占所传输比特总数的比率称为"),t("strong",[v._v("误码率 BER")]),v._v("。")]),v._v(" "),t("p",[v._v("目前在数据链路层广泛使用的是"),t("strong",[v._v("循环冗余检验 CRC(Cycle Redundancy Cheek)")]),v._v("。")]),v._v(" "),t("ul",[t("li",[v._v("收发双方约定好一个生成多项式；")]),v._v(" "),t("li",[v._v("发送方基于待发送数据和生成多项式计算出差错检测码（冗余码），并添加到代传输数据后面；")]),v._v(" "),t("li",[v._v("接受方通过生成多项式来计算收到的数据是否产生了误码。")])]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/generator.png"),alt:"generator"}}),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/demo01.png"),alt:"demo"}}),v._v(" "),t("p",[v._v("这种为了进行检错而添加的冗余码常称为"),t("strong",[v._v("帧检验序列FCS")]),v._v("。")]),v._v(" "),t("h3",{attrs:{id:"可靠传输"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可靠传输"}},[v._v("#")]),v._v(" 可靠传输")]),v._v(" "),t("p",[v._v("上述的所有过程中，并没有要求数据链路层向网络层提供“"),t("strong",[v._v("可靠传输")]),v._v("”服务。")]),v._v(" "),t("p",[v._v("所谓可靠传输，通俗的讲就是：数据链路层的发送端发送什么，接收端就接收到什么。比特差错只是传输差错中的一种，"),t("strong",[v._v("从整个计网体系来看")]),v._v("，传输差错还包括"),t("strong",[v._v("分组丢失、分组重复或分组失序")]),v._v("（一般出现在上层）。")]),v._v(" "),t("p",[v._v("一般情况下，"),t("strong",[v._v("有线链路")]),v._v("的误码率比较低，不要求可靠传输，那么出错的帧丢弃就算了，数据链路层不用做任何处理，可靠传输问题由上层解决。")]),v._v(" "),t("p",[t("strong",[v._v("无线链路")]),v._v("易受干扰，误码率较高，因此要求数据链路层必须提供可靠传输服务，那么就得想办法解决这种问题。")]),v._v(" "),t("p",[v._v("PS，从上到下：")]),v._v(" "),t("ul",[t("li",[v._v("TCP 向上提供面向连接、可靠；UDP 无连接、不可靠。")]),v._v(" "),t("li",[v._v("IP 向上提供无连接、不可靠；")]),v._v(" "),t("li",[v._v("802.11无线局域网要求数据链路层提供可靠传输；以太网不要求提供可靠传输。")])]),v._v(" "),t("h2",{attrs:{id:"ppp-point-to-point-protocol-协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ppp-point-to-point-protocol-协议"}},[v._v("#")]),v._v(" PPP(Point-to-Point Protocol) 协议")]),v._v(" "),t("p",[v._v("在通信链路较差的年代，数据链路层使用可靠传输是不错的办法，HDLC 协议(High-level Data Link Control，高级数据链路控) 是当时选择的可靠传输协议。随着通信链路质量的提升，PPP 协议逐渐取代了 HDLC。")]),v._v(" "),t("p",[v._v("PPP 协议就是用户计算机和 ISP 进行通信时所使用的数据链路层协议。PPP 协议应该满足一些需求，1999年公布的 PPPoE 是一个典型的例子，它使得 ISP 可以通过 DSL、电路调制解调器、以太网等宽带接入技术，以以太网接口的形式为用户提供接入服务。")]),v._v(" "),t("p",[v._v("PPP 协议为在点对点链路传输各种协议数据报提供了一个标准方法，主要由以下三部分构成：")]),v._v(" "),t("ul",[t("li",[v._v("对各种协议数据报的封装方法（封装成帧）；")]),v._v(" "),t("li",[v._v("链路控制协议 LCP，用于建立、配置以及测试数据链路的连接；")]),v._v(" "),t("li",[v._v("一套网络控制协议 NCPs，其中的每一个协议支持不同的网络层协议。")])]),v._v(" "),t("p",[v._v("这些方法让 PPP 协议能够在多种类型的点对点链路上运行，比如面向字节的异步链路和面向比特的同步链路。")]),v._v(" "),t("p",[v._v("以下是 PPP 协议的帧格式：")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/PPP.png"),alt:"PPP"}}),v._v(" "),t("h3",{attrs:{id:"透明传输-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#透明传输-2"}},[v._v("#")]),v._v(" 透明传输")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/PPP透明传输01.png"),alt:"PPP透明传输面向字节"}}),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/PPP透明传输02.png"),alt:"PPP透明传输面向比特"}}),v._v(" "),t("h3",{attrs:{id:"差错检测-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#差错检测-2"}},[v._v("#")]),v._v(" 差错检测")]),v._v(" "),t("p",[v._v("PPP 协议规定：接收方每收到一个 PPP 帧，就进行 CRC 检验。若 CRC 检验正确，就收下这个帧；反之则丢弃。PPP 协议并不需要向上层提供可靠传输服务。")]),v._v(" "),t("h3",{attrs:{id:"工作状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作状态"}},[v._v("#")]),v._v(" 工作状态")]),v._v(" "),t("p",[v._v("PPP 链路的初始化：")]),v._v(" "),t("p",[v._v("当用户拨号接入 ISP 后，就建立了一条从用户个人电脑到 ISP 的物理连接。这时，用户个人电脑向 ISP 发送一系列的链路控制协议 LCP 分组（封装成多个 PPP 帧)，以便建立 LCP 连接。这些分组及其响应选择了将要使用的一些 PPP 参数。接着还要进行网络层配置，网络控制协议 NCP 给新接入的用户个人电脑分配一个临时的 IP 地址。这样用户个人电脑就成为互联网上的一个有 IP 地址的主机了。")]),v._v(" "),t("p",[v._v("当用户通信完毕时，NCP 释放网络层连接，收回原来分配出去的 IP 地址。接着，LCP 释放数据链路层连接。最后释放的是物理层的连接。")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/PPP协议的工作状态.png"),alt:"PPP协议的工作状态"}}),v._v(" "),t("h2",{attrs:{id:"以太网历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以太网历史"}},[v._v("#")]),v._v(" 以太网历史")]),v._v(" "),t("p",[v._v("局域网按照拓扑结构分为星形网、环形网和总线网，总线网以以太网最为出名。IEEE802委员会提出了802.3局域网标准（严格说与具体的以太网标准有一丝差别）。")]),v._v(" "),t("p",[v._v("后来又出现了几个不同的局域网标准，为了使数据链路层更好地适应多种局域网标准，802委员会就把局域网的数据链路层分为了两个子层，分别是"),t("strong",[v._v("逻辑链路控制 LLC "),t("strong",[v._v("和")]),v._v("媒体接入控制 MAC")]),v._v("(Medium Access Control)。")]),v._v(" "),t("p",[v._v("再后来，由于 TCP/IP 体系经常使用以太网原来的标准 DIX Ethernet V2，LLC 的作用已经消失了，只剩下 MAC。")]),v._v(" "),t("h3",{attrs:{id:"适配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适配器"}},[v._v("#")]),v._v(" 适配器")]),v._v(" "),t("p",[v._v("计算机与外界局域网的连接是通过通信适配器进行的。原来的适配器是外接的网络接口卡 NIC，现在的计算机主板基本使用内部嵌入适配器。适配器上装有处理器和存储器（包括 RAM 和 ROM）。")]),v._v(" "),t("p",[v._v("适配器与局域网之间的通信是通过电缆或者双绞线的串行传输，与电脑之间是通过主板上的 I/O 总线并行传输，所以适配器的一个重要功能就是进行数据转换。由于网络上的数据率和计算机上的不一样，所以适配器需要存储芯片来缓存数据。同时计算机的操作系统应该装有管理适配器的设备驱动程序。适配器还要能够实现以太网协议。（此处的适配器使用有线传输，现代笔记本大多自带无线网卡）。")]),v._v(" "),t("p",[v._v("适配器在接受发送数据过程中不使用 CPU，当收到有差错的帧自行丢弃而不必告诉计算机，当收到正确的帧就通过中断来通知计算机，并把数据交付给网络层。当计算机要发送 IP 数据报，则通过协议栈把数据向下交给适配器，由适配器封装成帧后发送到局域网。（现在的芯片集成度很高，适配器一般包含数据链路层和物理层）。")]),v._v(" "),t("blockquote",[t("p",[v._v("计算机的硬件地址就在适配器的 ROM 中，计算机的软件地址（IP 地址）则在计算机的存储器中。")])]),v._v(" "),t("h2",{attrs:{id:"媒体接入控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#媒体接入控制"}},[v._v("#")]),v._v(" 媒体接入控制")]),v._v(" "),t("p",[v._v("共享信道要着重考虑的一个问题就是如何协同多个发送和接收站点对一个共享传输媒体的占用，即"),t("strong",[v._v("媒体接入控制 MAC")]),v._v("(Medium Access Control)。")]),v._v(" "),t("p",[v._v("有两种解决的办法：")]),v._v(" "),t("ul",[t("li",[v._v("静态划分信道：频分复用 FDM、时分复用 TDM、波分复用 WDM 和码分复用 CDM。")]),v._v(" "),t("li",[v._v("动态接入控制：随机接入、受控接入（已淘汰）")])]),v._v(" "),t("h3",{attrs:{id:"随机接入主要使用以下两种协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#随机接入主要使用以下两种协议"}},[v._v("#")]),v._v(" 随机接入主要使用以下两种协议：")]),v._v(" "),t("h3",{attrs:{id:"csma-cd-协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csma-cd-协议"}},[v._v("#")]),v._v(" CSMA/CD 协议")]),v._v(" "),t("p",[v._v("CSMA/CD 协议主要用于总线局域网。")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/CSMA-CD.png"),alt:"CSMA-CD"}}),v._v(" "),t("p",[v._v("对于该协议来说，有三个要点，第一是"),t("strong",[v._v("争用期")]),v._v("，以太网的端到端往返传播时延称为争用期，主机最多经过一个争用期可以检测到是否发生碰撞，因此共享式以太网不能连接太多的主机，使用的总线也不能太长；")]),v._v(" "),t("p",[v._v("第二个要点是"),t("strong",[v._v("最小和最大帧长")]),v._v("，范围是64字节~1518字节（以太网V2的MAC帧，802.1Q帧为1522字节），以太网的最小帧长确保了主机可以在帧发送完成之前就检测到该帧的发送过程是否遭遇了碰撞；最大帧长确保总线不会被一台主机长时间占用；")]),v._v(" "),t("p",[v._v("第三个要点是"),t("strong",[v._v("截断二进制指数退避算法")]),v._v("，这个算法可以确定碰撞后重传的时机。")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/帧发送流程.png"),alt:"帧发送流程"}}),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/帧接收流程.png"),alt:"帧接收流程"}}),v._v(" "),t("h3",{attrs:{id:"csma-ca-协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csma-ca-协议"}},[v._v("#")]),v._v(" CSMA/CA 协议")]),v._v(" "),t("p",[v._v("CSMA/CA 协议主要用于无线局域网。802.11无线局域网在 CSMA 的基础上增加了"),t("strong",[v._v("碰撞避免 CA")]),v._v(" 功能，不再使用碰撞检测，同时，由于不可避免所有碰撞，并且无线信道误码率较高，802.11标准还使用了数据链路层的停止-等待协议来确保数据正确接收。")]),v._v(" "),t("p",[v._v("802.11的 MAC 层标准定义了两种不同的媒体接入控制方式：")]),v._v(" "),t("ul",[t("li",[v._v("分布式协调功能 DCF：没有中心控制站点，每个站点使用 CSMA/CA 协议通过争用信道来获取发送权。")]),v._v(" "),t("li",[v._v("点协调功能 PCF：使用集中控制的接入算法，较少使用。")])]),v._v(" "),t("p",[v._v("802.11标准规定，所有的站点"),t("strong",[v._v("必须在持续检测到信道空闲一段指定时间后才能发送帧")]),v._v("，这段时间称为"),t("strong",[v._v("帧间间隔IFS")]),v._v("。")]),v._v(" "),t("p",[v._v("帧间间隔的长短取决于该站点要发送的帧的类型:")]),v._v(" "),t("ul",[t("li",[v._v("高优先级帧需要等待的时间较短，因此可优先获得发送权;")]),v._v(" "),t("li",[v._v("低优先级帧需要等待的时间较长。若某个站的低优先级帧还没来得及发送，而其他站的高优先级帧已发送到信道上，则信道变为忙态，因而低优先级帧就只能再推迟发送了。这样就减少了发生碰撞的机会。")])]),v._v(" "),t("p",[v._v("常用的两种帧间间隔如下:")]),v._v(" "),t("ul",[t("li",[v._v("短帧间间隔 SIFS(28us)，是最短的帧间间隔，用来分隔开属于一次对话的各帧。一个站点应当能够在这段时间内从发送方式切换到接收方式。使用SIFS的帧类型有 ACK 帧、CTS 帧、由过长的 MAC 帧分片后的数据帧、以及所有回答 AP 探询的帧和在 PCF 方式中接入点 AP 发送出的任何帧。")]),v._v(" "),t("li",[v._v("DCF帧间间隔 DIFS(128us)，它比短帧间间隔 SIFS 要长得多，在 DCF 方式中用来发送数据帧和管理帧。")])]),v._v(" "),t("p",[t("strong",[v._v("CSMA/CA 协议的工作原理")]),v._v("：")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/CSMA-CD工作原理.png"),alt:"CSMA-CD工作原理"}}),v._v(" "),t("p",[v._v("其中，退避算法如下所示：")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/退避算法.png"),alt:"退避算法"}}),v._v(" "),t("p",[t("strong",[v._v("信道预约：")])]),v._v(" "),t("p",[v._v("为了"),t("strong",[v._v("尽可能减少碰撞的概率")]),v._v("和降低碰撞的影响，802.11标准允许要发送数据的站点"),t("strong",[v._v("对信道进行预约")]),v._v("。")]),v._v(" "),t("ol",[t("li",[v._v("源站在发送数据帧之前先发送一个短的控制帧，称为"),t("strong",[v._v("请求发送 RTS")]),v._v("(Request To Send)，它包括源地址、目的地址以及这次通信（包括相应的确认帧）所需的持续时间。")]),v._v(" "),t("li",[v._v("若目的站正确收到源站发来的 RTS 帧，且媒体空闲，就发送一个响应控制帧，称为"),t("strong",[v._v("允许发送 CTS")]),v._v("(Cear To Send)，它也包括这次通信所需的\n持续时间（从 RTS 帧中将此持续时间复制到 CTS 帧中）。")]),v._v(" "),t("li",[v._v("源站收到 CTS 帧后，再等待一段时间 SIFS 后，就可发送其数据帧。")]),v._v(" "),t("li",[v._v("若目的站正确收到了源站发来的数据帧，在等待时间 SIFS 后，就向源站发送确认帧 ACK。")])]),v._v(" "),t("p",[v._v("除源站和目的站以外的其他各站，在收到 CTS 帧（或数据帧）后就"),t("strong",[v._v("推迟接入")]),v._v("到无线局域网中，这样就保证了源站和目的站之间的通信不会受到其他站的干扰。")]),v._v(" "),t("p",[v._v("如果 RTS 帧发生碰撞，源站就收不到 CTS 帧，需执行退避算法重传 RTS 帧。")]),v._v(" "),t("p",[v._v("由于 RTS 帧和 CTS 帧很短，发送碰撞的概率、碰撞产生的开销及本身的开销都很小。而对于一般的数据帧，其发送时延往往大于传播时延（因为是局域网)，碰撞的概率很大，且一旦发生碰撞而导致数据帧重发，则浪费的时间就很多，因此用很小的代价对信道进行预约往往是值得的。802.11标准规定了3种情况供用户选择:")]),v._v(" "),t("ul",[t("li",[v._v("使用 RTS 帧和 CTS 帧")]),v._v(" "),t("li",[v._v("不使用 RTS 帧和 CTS 帧")]),v._v(" "),t("li",[v._v("只有当数据帧的长度超过某一数值时才使用 RTS 帧和 CTS 帧")])]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/信道预约.png"),alt:"信道预约"}}),v._v(" "),t("p",[t("strong",[v._v("虚拟载波监听：")])]),v._v(" "),t("p",[v._v("除 RTS 帧和 CTS 帧会携带通信需要持续的时间，数据帧也能携带通信需要持续的时间，这称为802.11的"),t("strong",[v._v("虚拟载波监听机制")]),v._v("。由于利用虚拟载波监听机制，站点只要监听到 RTS 帧、CTS 帧或数据帧中的任何一个，就能知道信道被占用的持续时间，而不需要真正监听到信道上的信号，因此虚拟载波监听机制能减少隐蔽站带来的碰撞问题。")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/虚拟载波监听.png"),alt:"虚拟载波监听"}}),v._v(" "),t("h2",{attrs:{id:"集线器与交换机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集线器与交换机"}},[v._v("#")]),v._v(" 集线器与交换机")]),v._v(" "),t("p",[v._v("早期的总线型以太网使用同轴电缆作为媒介，淘汰后，使用双绞线和集线器 HUB 的星型以太网，然后又被淘汰了，使用交换机。")]),v._v(" "),t("ul",[t("li",[v._v("集线器在逻辑上，仍然是总线网，使用 CSMA/CD 协议（半双工）；")]),v._v(" "),t("li",[v._v("集线器只工作在物理层，不进行碰撞检测（由各站网卡负责，网卡会检测 MAC 地址）；")]),v._v(" "),t("li",[v._v("集线器一般都有少量的容错能力和网络管理功能。")])]),v._v(" "),t("p",[v._v("以太网交换机则更先进，在交换机的帧交换表完整的情况下：")]),v._v(" "),t("ul",[t("li",[v._v("工作在全双工方式下；")]),v._v(" "),t("li",[v._v("具有并行性，能同时连通多个接口，无碰撞；")]),v._v(" "),t("li",[v._v("以太网交换机工作在数据链路层（以及物理层），它收到帧后，会在帧交换表中查找帧的目的 MAC 地址所对应的接口号，然后通过该接口转发，这样可以隔离碰撞域；")]),v._v(" "),t("li",[v._v("以太网交换机具有多种速率的接口，每个接口是一个独立的碰撞域；")]),v._v(" "),t("li",[v._v("以太网交换机的帧交换表是通过自学习算法建立的，具有即插即用性；")]),v._v(" "),t("li",[v._v("以太网交换机同样具有集线器的广播特性。")])]),v._v(" "),t("p",[v._v("以太网交换机具有自学习算法，一开始会通过各主机的交互建立起帧交换表（默认各主机已经通过 ARP 协议知道目的主机的 MAC 地址），帧交换表中的数据会定期删除，这是为了防止对应接口的主机 MAC 地址发生改变。")]),v._v(" "),t("h3",{attrs:{id:"交换机的生成树协议-stp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#交换机的生成树协议-stp"}},[v._v("#")]),v._v(" 交换机的生成树协议 STP")]),v._v(" "),t("p",[v._v("以太网为了保证可靠性，一般会增加冗余链路，但是这会形成网络环路造成广播风暴，于是就有了生成树协议。")]),v._v(" "),t("p",[v._v("以下是生成树算法的简要作用：")]),v._v(" "),t("ul",[t("li",[v._v("不论交换机之间采用怎样的物理连接，交换机都能够"),t("strong",[v._v("自动计算并构建一个逻辑上没有环路的网络")]),v._v("，其逻辑拓扑结构必须是树型的（无逻辑环路）；")]),v._v(" "),t("li",[v._v("最终生成的树型逻辑拓扑要"),t("strong",[v._v("确保连通整个网络")]),v._v("；")]),v._v(" "),t("li",[v._v("当首次连接交换机或网络"),t("strong",[v._v("物理拓扑发生变化")]),v._v("时（有可能是人为改变或故障)，交换机都将进行"),t("strong",[v._v("生成树的重新计算")]),v._v("。")])]),v._v(" "),t("h2",{attrs:{id:"虚拟局域网-vlan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#虚拟局域网-vlan"}},[v._v("#")]),v._v(" 虚拟局域网 VLAN")]),v._v(" "),t("p",[v._v("随着使用交换机不断地扩大网络，同时形成了更大的广播域，这样不仅更容易造成广播风暴，同时在发送数据的过程中也可能会占据太多网络资源（ARP 查 MAC 地址），路由器虽然可以分割广播域，但是成本较高，于是虚拟局域网 VLAN 应运而生。")]),v._v(" "),t("p",[v._v("虚拟局域网 VLAN 是一种将局域网内的设备"),t("strong",[v._v("划分成与物理位置无关的逻辑组的技术")]),v._v("，这些逻辑组具有某些共同的需求。")]),v._v(" "),t("h3",{attrs:{id:"实现机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现机制"}},[v._v("#")]),v._v(" 实现机制")]),v._v(" "),t("p",[v._v("IEEE 802.1Q 帧，对以太网的 MAC 帧格式进行了拓展，插入了4字节的 VLAN 标记。VLAN 标记的最后12比特称为 VLAN 标识符 VID，它唯一地标志了以太网帧属于哪一个 VLAN，取值范围1~4094。")]),v._v(" "),t("p",[v._v("802.1Q 帧是由交换机来处理，交换机收到普通的以太网帧时，会为其打上 VLAN 的标记，转发时去掉。交换机的端口类型有：Access、Trunk 和 Hybrid。在华为交换机上，交换机各端口的缺省 VLAN ID 称为 Port VLAN ID，简记 PVID。")]),v._v(" "),t("p",[v._v("Access 端口的处理：")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/Access.png"),alt:"Access"}}),v._v(" "),t("p",[v._v("Trunk 端口的处理：")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/Trunk.png"),alt:"Trunk"}}),v._v(" "),t("p",[v._v("Hybrid 端口的处理：")]),v._v(" "),t("img",{attrs:{src:v.$withBase("/NetWork/Hybrid.png"),alt:"Hybrid"}})])}),[],!1,null,null,null);_.default=r.exports}}]);